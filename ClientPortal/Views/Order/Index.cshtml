@model IEnumerable<Data.SelectVMs.OrderVM>

@{
    ViewData["Title"] = "Index";
}

<h1>@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderHeader" })</h1>

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderUserHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderDateHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderStatusHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderNameHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderEMailHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderPhoneNumberHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderAddressHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderPaymentMethodHeader" })
                    </th>
                    <th>
                        @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderOrderIsPaidHeader" })
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.User)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MobileNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsPaid)
                    </td>
                    <td>
                        <a class="card-body" asp-area="" asp-controller="Order" asp-action="Paid" asp-route-itemid="@item.Id.ToString()"><button type="button" class="btn btn-primary">
                                    @await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderPaidButton" })
                        </button></a>
                    </td>
                </tr>
        }
            </tbody>
        </table>
    </div>
</div>