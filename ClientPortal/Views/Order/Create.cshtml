@model Data.CreateEditVMs.OrderCreateEditVM

@{
    Context.Request.Cookies.TryGetValue("email", out string email);
    ViewData["Title"] = "CreateOrder";
}

<h1>@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderHeader" })</h1>

<hr />
<div class="row">
    <div class="container px-4 px-lg-5 align-content-center">
        <div class="col-md">
            <form method="post" asp-route-id="@ViewBag.Email" asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group col">
                    <label asp-for="CreateDate" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderCreateDateHeader" })</label>
                    <input type="date" asp-for="CreateDate" class="form-control text-center"/>
                    <span asp-validation-for="CreateDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderStatusId" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderStatusHeader" })</label>
                    1.Nowe
                    2.W toku
                    3.Wysłane
                    4.Zakończone
                    <input asp-for="OrderStatusId" class="form-control text-center" value="1"/>
                    <span asp-validation-for="OrderStatusId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IsActive" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderActiveHeader" })</label>
                    <input asp-for="IsActive" class="form-control text-center" value="True" readonly />
                    <span asp-validation-for="IsActive" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderNameHeader" })</label>
                    <input asp-for="Name" class="form-control text-center" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderEMailHeader" })</label>
                    <input asp-for="Email" class="form-control text-center" value="@email" readonly/>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MobileNumber" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderPhoneNumberHeader" })</label>
                    <input asp-for="MobileNumber" class="form-control text-center" />
                    <span asp-validation-for="MobileNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderAddressHeader" })</label>
                    <input asp-for="Address" class="form-control text-center" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PaymentMethodId" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderPaymentMethodHeader" })</label>
                    1.Gotówka
                    2.Przelew
                    <input asp-for="PaymentMethodId" class="form-control text-center" />
                    <span asp-validation-for="PaymentMethodId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IsPaid" class="control-label">@await Component.InvokeAsync("PageContentViewComponent", new { type = "OrderNewOrderIsPaidHeader" })</label>
                    <input type="checkbox" name="IsPaid" />
                    <span asp-validation-for="IsPaid" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Dodaj" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
